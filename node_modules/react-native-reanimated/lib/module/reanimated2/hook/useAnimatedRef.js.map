{"version":3,"names":["useRef","useSharedValue","getTag","getShadowNodeWrapperFromHostInstance","makeShareableCloneRecursive","registerShareableMapping","getShareableShadowNodeFromComponent","component","getComponentOrScrollableRef","global","_IS_FABRIC","getNativeScrollRef","getScrollableNode","getTagValueFunction","useAnimatedRef","tag","ref","current","fun","value","remoteRef","__init"],"sources":["useAnimatedRef.ts"],"sourcesContent":["import { Component, useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport { RefObjectFunction } from './commonTypes';\nimport { ShadowNodeWrapper } from '../commonTypes';\nimport { getTag } from '../NativeMethods';\nimport { getShadowNodeWrapperFromHostInstance } from '../fabricUtils';\nimport {\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from '../shareables';\n\ninterface ComponentRef extends Component {\n  getNativeScrollRef?: () => ComponentRef;\n  getScrollableNode?: () => ComponentRef;\n}\n\nfunction getShareableShadowNodeFromComponent(\n  component: ComponentRef\n): ShadowNodeWrapper {\n  return getShadowNodeWrapperFromHostInstance(component);\n}\n\nfunction getComponentOrScrollableRef(component: ComponentRef): ComponentRef {\n  if (global._IS_FABRIC && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!global._IS_FABRIC && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\nconst getTagValueFunction = global._IS_FABRIC\n  ? getShareableShadowNodeFromComponent\n  : getTag;\n\nexport function useAnimatedRef<T extends ComponentRef>(): RefObjectFunction<T> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const ref = useRef<RefObjectFunction<T>>();\n\n  if (!ref.current) {\n    const fun: RefObjectFunction<T> = <RefObjectFunction<T>>((component) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        tag.value = getTagValueFunction(getComponentOrScrollableRef(component));\n        fun.current = component;\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const remoteRef = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        return () => tag.value;\n      },\n    });\n    registerShareableMapping(fun, remoteRef);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,OAAO;AACzC,SAASC,cAAc,QAAQ,kBAAkB;AAGjD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,oCAAoC,QAAQ,gBAAgB;AACrE,SACEC,2BAA2B,EAC3BC,wBAAwB,QACnB,eAAe;AAOtB,SAASC,mCAAmCA,CAC1CC,SAAuB,EACJ;EACnB,OAAOJ,oCAAoC,CAACI,SAAS,CAAC;AACxD;AAEA,SAASC,2BAA2BA,CAACD,SAAuB,EAAgB;EAC1E,IAAIE,MAAM,CAACC,UAAU,IAAIH,SAAS,CAACI,kBAAkB,EAAE;IACrD,OAAOJ,SAAS,CAACI,kBAAkB,EAAE;EACvC,CAAC,MAAM,IAAI,CAACF,MAAM,CAACC,UAAU,IAAIH,SAAS,CAACK,iBAAiB,EAAE;IAC5D,OAAOL,SAAS,CAACK,iBAAiB,EAAE;EACtC;EACA,OAAOL,SAAS;AAClB;AAEA,MAAMM,mBAAmB,GAAGJ,MAAM,CAACC,UAAU,GACzCJ,mCAAmC,GACnCJ,MAAM;AAEV,OAAO,SAASY,cAAcA,CAAA,EAAiD;EAC7E,MAAMC,GAAG,GAAGd,cAAc,CAAoC,CAAC,CAAC,CAAC;EACjE,MAAMe,GAAG,GAAGhB,MAAM,EAAwB;EAE1C,IAAI,CAACgB,GAAG,CAACC,OAAO,EAAE;IAChB,MAAMC,GAAyB,GAA2BX,SAAS,IAAK;MACtE;MACA,IAAIA,SAAS,EAAE;QACbQ,GAAG,CAACI,KAAK,GAAGN,mBAAmB,CAACL,2BAA2B,CAACD,SAAS,CAAC,CAAC;QACvEW,GAAG,CAACD,OAAO,GAAGV,SAAS;MACzB;MACA,OAAOQ,GAAG,CAACI,KAAK;IAClB,CAAE;IAEFD,GAAG,CAACD,OAAO,GAAG,IAAI;IAElB,MAAMG,SAAS,GAAGhB,2BAA2B,CAAC;MAC5CiB,MAAM,EAAEA,CAAA,KAAM;QACZ,SAAS;;QACT,OAAO,MAAMN,GAAG,CAACI,KAAK;MACxB;IACF,CAAC,CAAC;IACFd,wBAAwB,CAACa,GAAG,EAAEE,SAAS,CAAC;IACxCJ,GAAG,CAACC,OAAO,GAAGC,GAAG;EACnB;EAEA,OAAOF,GAAG,CAACC,OAAO;AACpB"}