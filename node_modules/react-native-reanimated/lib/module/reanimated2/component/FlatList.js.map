{"version":3,"names":["React","forwardRef","FlatList","StyleSheet","ReanimatedView","createAnimatedComponent","AnimatedFlatList","createCellRenderer","itemLayoutAnimation","cellStyle","cellRenderer","props","createElement","layout","onLayout","style","children","ReanimatedFlatlist","ref","restProps","inverted","horizontal","styles","horizontallyInverted","verticallyInverted","undefined","useMemo","_extends","CellRendererComponent","create","transform","scaleY","scaleX"],"sources":["FlatList.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef } from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  LayoutChangeEvent,\n  StyleSheet,\n} from 'react-native';\nimport ReanimatedView from './View';\nimport createAnimatedComponent from '../../createAnimatedComponent';\nimport { ILayoutAnimationBuilder } from '../layoutReanimation/animationBuilder/commonTypes';\nimport { StyleProps } from '../commonTypes';\n\nconst AnimatedFlatList = createAnimatedComponent(FlatList as any) as any;\n\ninterface AnimatedFlatListProps {\n  onLayout: (event: LayoutChangeEvent) => void;\n  // implicit `children` prop has been removed in @types/react^18.0.0\n  children: React.ReactNode;\n  inverted?: boolean;\n  horizontal?: boolean;\n}\n\nconst createCellRenderer = (\n  itemLayoutAnimation?: ILayoutAnimationBuilder,\n  cellStyle?: StyleProps\n) => {\n  const cellRenderer = (props: AnimatedFlatListProps) => {\n    return (\n      <ReanimatedView\n        layout={itemLayoutAnimation}\n        onLayout={props.onLayout}\n        style={cellStyle}>\n        {props.children}\n      </ReanimatedView>\n    );\n  };\n\n  return cellRenderer;\n};\n\nexport interface ReanimatedFlatListProps<ItemT> extends FlatListProps<ItemT> {\n  itemLayoutAnimation?: ILayoutAnimationBuilder;\n}\n\ntype ReanimatedFlatListFC<T = any> = React.FC<ReanimatedFlatListProps<T>>;\n\nconst ReanimatedFlatlist: ReanimatedFlatListFC = forwardRef(\n  (props: ReanimatedFlatListProps<any>, ref: ForwardedRef<FlatList>) => {\n    const { itemLayoutAnimation, ...restProps } = props;\n\n    const cellStyle = restProps?.inverted\n      ? restProps?.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : undefined;\n\n    const cellRenderer = React.useMemo(\n      () => createCellRenderer(itemLayoutAnimation, cellStyle),\n      [cellStyle]\n    );\n\n    return (\n      <AnimatedFlatList\n        ref={ref}\n        {...restProps}\n        CellRendererComponent={cellRenderer}\n      />\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  verticallyInverted: { transform: [{ scaleY: -1 }] },\n  horizontallyInverted: { transform: [{ scaleX: -1 }] },\n});\n\nexport default ReanimatedFlatlist;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAkBC,UAAU,QAAQ,OAAO;AACvD,SACEC,QAAQ,EAGRC,UAAU,QACL,cAAc;AACrB,OAAOC,cAAc,MAAM,QAAQ;AACnC,OAAOC,uBAAuB,MAAM,+BAA+B;AAInE,MAAMC,gBAAgB,GAAGD,uBAAuB,CAACH,QAAQ,CAAe;AAUxE,MAAMK,kBAAkB,GAAGA,CACzBC,mBAA6C,EAC7CC,SAAsB,KACnB;EACH,MAAMC,YAAY,GAAIC,KAA4B,IAAK;IACrD,oBACEX,KAAA,CAAAY,aAAA,CAACR,cAAc;MACbS,MAAM,EAAEL,mBAAoB;MAC5BM,QAAQ,EAAEH,KAAK,CAACG,QAAS;MACzBC,KAAK,EAAEN;IAAU,GAChBE,KAAK,CAACK,QAAQ,CACA;EAErB,CAAC;EAED,OAAON,YAAY;AACrB,CAAC;AAQD,MAAMO,kBAAwC,gBAAGhB,UAAU,CACzD,CAACU,KAAmC,EAAEO,GAA2B,KAAK;EACpE,MAAM;IAAEV,mBAAmB;IAAE,GAAGW;EAAU,CAAC,GAAGR,KAAK;EAEnD,MAAMF,SAAS,GAAGU,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEC,QAAQ,GACjCD,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEE,UAAU,GACnBC,MAAM,CAACC,oBAAoB,GAC3BD,MAAM,CAACE,kBAAkB,GAC3BC,SAAS;EAEb,MAAMf,YAAY,GAAGV,KAAK,CAAC0B,OAAO,CAChC,MAAMnB,kBAAkB,CAACC,mBAAmB,EAAEC,SAAS,CAAC,EACxD,CAACA,SAAS,CAAC,CACZ;EAED,oBACET,KAAA,CAAAY,aAAA,CAACN,gBAAgB,EAAAqB,QAAA;IACfT,GAAG,EAAEA;EAAI,GACLC,SAAS;IACbS,qBAAqB,EAAElB;EAAa,GACpC;AAEN,CAAC,CACF;AAED,MAAMY,MAAM,GAAGnB,UAAU,CAAC0B,MAAM,CAAC;EAC/BL,kBAAkB,EAAE;IAAEM,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE,CAAC;EAAE,CAAC;EACnDR,oBAAoB,EAAE;IAAEO,SAAS,EAAE,CAAC;MAAEE,MAAM,EAAE,CAAC;IAAE,CAAC;EAAE;AACtD,CAAC,CAAC;AAEF,eAAef,kBAAkB"}