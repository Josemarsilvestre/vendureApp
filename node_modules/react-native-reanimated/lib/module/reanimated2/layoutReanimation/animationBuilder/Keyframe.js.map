{"version":3,"names":["Easing","withDelay","withSequence","withTiming","Keyframe","constructor","definitions","_defineProperty","delay","delayV","delayFunction","getDelayFunction","keyframes","initialValues","parseDefinitions","callback","callbackV","_targetValues","animations","addAnimation","key","keyframePoints","length","animation","value","duration","easing","linear","apply","map","keyframePoint","includes","_animations$transform","transform","push","split","Object","keys","forEach","transformProp","index","transformPropKey","toString","parsedKeyframes","from","Error","to","styleProp","_initialValues$styleP","transformStyle","durationV","animationKeyPoints","Array","getAnimationDuration","currentKeyPoint","maxDuration","currentDuration","reduce","acc","addKeyPoint","_ref","filter","parseInt","sort","a","b","keyPoint","keyframe","addKeyPointWith","_keyframe$key","durationMs","delayMs","withCallback","_"],"sources":["Keyframe.ts"],"sourcesContent":["import { Easing, EasingFn } from '../../Easing';\nimport { withDelay, withSequence, withTiming } from '../../animation';\nimport {\n  AnimationFunction,\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n  KeyframeProps,\n} from './commonTypes';\nimport { TransformProperty, StyleProps } from '../../commonTypes';\nexport interface KeyframePoint {\n  duration: number;\n  value: number | string;\n  easing?: EasingFn;\n}\nexport interface ParsedKeyframesDefinition {\n  initialValues: StyleProps;\n  keyframes: Record<string, KeyframePoint[]>;\n}\nexport class Keyframe implements IEntryExitAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  callbackV?: (finished: boolean) => void;\n  definitions: Record<string, KeyframeProps>;\n\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions: Record<string, KeyframeProps>) {\n    this.definitions = definitions;\n  }\n\n  private parseDefinitions(): ParsedKeyframesDefinition {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes: Record<string, KeyframePoint[]> = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw Error(\n          \"You cannot provide both keyframe 0 and 'from' as they both specified initial values\"\n        );\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw Error(\n          \"You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\"\n        );\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n       One of the assumptions is that keyframe  0 is required to properly set initial values.\n       Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw Error(\n        \"Please provide 0, or 'from' keyframe with initial state of your object.\"\n      );\n    }\n    const initialValues: StyleProps = this.definitions['0'] as StyleProps;\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach((styleProp: string) => {\n      if (styleProp === 'transform') {\n        initialValues[styleProp]?.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach((transformProp: string) => {\n            parsedKeyframes[index.toString() + '_transform:' + transformProp] =\n              [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n\n    const duration: number = this.durationV ? this.durationV : 500;\n    const animationKeyPoints: Array<string> = Array.from(\n      Object.keys(this.definitions)\n    );\n\n    const getAnimationDuration = (\n      key: string,\n      currentKeyPoint: number\n    ): number => {\n      const maxDuration = (currentKeyPoint / 100) * duration;\n      const currentDuration = parsedKeyframes[key].reduce(\n        (acc: number, value: KeyframePoint) => acc + value.duration,\n        0\n      );\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = ({\n      key,\n      value,\n      currentKeyPoint,\n      easing,\n    }: {\n      key: string;\n      value: string | number;\n      currentKeyPoint: number;\n      easing?: EasingFn;\n    }): void => {\n      if (!(key in parsedKeyframes)) {\n        throw Error(\n          \"Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\"\n        );\n      }\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value: value,\n        easing: easing,\n      });\n    };\n    animationKeyPoints\n      .filter((value: string) => parseInt(value) !== 0)\n      .sort((a: string, b: string) => parseInt(a) - parseInt(b))\n      .forEach((keyPoint: string) => {\n        if (parseInt(keyPoint) < 0 || parseInt(keyPoint) > 100) {\n          throw Error('Keyframe should be in between range 0 - 100.');\n        }\n        const keyframe: KeyframeProps = this.definitions[keyPoint];\n        const easing = keyframe.easing;\n        delete keyframe.easing;\n        const addKeyPointWith = (key: string, value: string | number) =>\n          addKeyPoint({\n            key,\n            value,\n            currentKeyPoint: parseInt(keyPoint),\n            easing,\n          });\n        Object.keys(keyframe).forEach((key: string) => {\n          if (key === 'transform') {\n            keyframe[key]?.forEach(\n              (transformStyle: { [key: string]: any }, index) => {\n                Object.keys(transformStyle).forEach((transformProp: string) => {\n                  addKeyPointWith(\n                    index.toString() + '_transform:' + transformProp,\n                    transformStyle[transformProp]\n                  );\n                });\n              }\n            );\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n    return { initialValues: initialValues, keyframes: parsedKeyframes };\n  }\n\n  duration(durationMs: number): Keyframe {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  delay(delayMs: number): Keyframe {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  withCallback(callback: (finsihed: boolean) => void): Keyframe {\n    this.callbackV = callback;\n    return this;\n  }\n\n  private getDelayFunction(): AnimationFunction {\n    const delay = this.delayV;\n    return delay\n      ? withDelay\n      : (_, animation) => {\n          'worklet';\n          return animation;\n        };\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delay = this.delayV;\n    const delayFunction = this.getDelayFunction();\n    const { keyframes, initialValues } = this.parseDefinitions();\n    const callback = this.callbackV;\n\n    return (_targetValues) => {\n      'worklet';\n      const animations: StyleProps = {};\n\n      /* \n            For each style property, an animations sequence is created that corresponds with its key points.\n            Transform style properties require special handling because of their nested structure.\n      */\n      const addAnimation = (key: string) => {\n        const keyframePoints = keyframes[key];\n        // in case if property was only passed as initial value\n        if (keyframePoints.length === 0) return;\n        const animation = delayFunction(\n          delay,\n          keyframePoints.length === 1\n            ? withTiming(keyframePoints[0].value, {\n                duration: keyframePoints[0].duration,\n                easing: keyframePoints[0].easing\n                  ? keyframePoints[0].easing\n                  : Easing.linear,\n              })\n            : withSequence.apply(\n                this,\n                keyframePoints.map((keyframePoint: KeyframePoint) =>\n                  withTiming(keyframePoint.value, {\n                    duration: keyframePoint.duration,\n                    easing: keyframePoint.easing\n                      ? keyframePoint.easing\n                      : Easing.linear,\n                  })\n                )\n              )\n        );\n        if (key.includes('transform')) {\n          if (!('transform' in animations)) {\n            animations.transform = [];\n          }\n          animations.transform?.push(<TransformProperty>{\n            [key.split(':')[1]]: animation,\n          });\n        } else {\n          animations[key] = animation;\n        }\n      };\n      Object.keys(initialValues).forEach((key: string) => {\n        if (key.includes('transform')) {\n          initialValues[key].forEach(\n            (transformProp: Record<string, number | string>, index: number) => {\n              Object.keys(transformProp).forEach((transformPropKey: string) => {\n                addAnimation(\n                  index.toString() + '_transform:' + transformPropKey\n                );\n              });\n            }\n          );\n        } else {\n          addAnimation(key);\n        }\n      });\n      return {\n        animations: animations,\n        initialValues: initialValues,\n        callback: callback,\n      };\n    };\n  };\n}\n"],"mappings":"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"}