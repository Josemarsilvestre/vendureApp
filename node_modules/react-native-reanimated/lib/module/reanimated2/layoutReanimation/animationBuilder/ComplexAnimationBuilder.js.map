{"version":3,"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","constructor","arguments","_defineProperty","easing","easingFunction","instance","createInstance","easingV","rotate","degree","rotateV","springify","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","withInitialValues","values","initialValues","getAnimationAndConfig","duration","durationV","animation","config"],"sources":["ComplexAnimationBuilder.ts"],"sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport {\n  AnimationFunction,\n  BaseBuilderAnimationConfig,\n  LayoutAnimationAndConfig,\n} from './commonTypes';\nimport { EasingFn } from '../../Easing';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nimport { StyleProps } from '../../commonTypes';\n\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  easingV?: EasingFn;\n  rotateV?: string;\n  type?: AnimationFunction;\n  dampingV?: number;\n  massV?: number;\n  stiffnessV?: number;\n  overshootClampingV?: number;\n  restDisplacementThresholdV?: number;\n  restSpeedThresholdV?: number;\n  initialValues?: StyleProps;\n\n  static createInstance: () => ComplexAnimationBuilder;\n\n  static easing(easingFunction: EasingFn): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n\n  easing(easingFunction: EasingFn): ComplexAnimationBuilder {\n    this.easingV = easingFunction;\n    return this;\n  }\n\n  static rotate(degree: string): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n\n  rotate(degree: string): ComplexAnimationBuilder {\n    this.rotateV = degree;\n    return this;\n  }\n\n  static springify(): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.springify();\n  }\n\n  springify(): ComplexAnimationBuilder {\n    this.type = withSpring as AnimationFunction;\n    return this;\n  }\n\n  static damping(damping: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n\n  damping(damping: number): ComplexAnimationBuilder {\n    this.dampingV = damping;\n    return this;\n  }\n\n  static mass(mass: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n\n  mass(mass: number): ComplexAnimationBuilder {\n    this.massV = mass;\n    return this;\n  }\n\n  static stiffness(stiffness: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n\n  stiffness(stiffness: number): ComplexAnimationBuilder {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n\n  static overshootClamping(overshootClamping: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n\n  overshootClamping(overshootClamping: number): ComplexAnimationBuilder {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n\n  static restDisplacementThreshold(\n    restDisplacementThreshold: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.restDisplacementThreshold(restDisplacementThreshold);\n  }\n\n  restDisplacementThreshold(\n    restDisplacementThreshold: number\n  ): ComplexAnimationBuilder {\n    this.restDisplacementThresholdV = restDisplacementThreshold;\n    return this;\n  }\n\n  static restSpeedThreshold(\n    restSpeedThreshold: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.restSpeedThreshold(restSpeedThreshold);\n  }\n\n  restSpeedThreshold(restSpeedThreshold: number): ComplexAnimationBuilder {\n    this.restSpeedThresholdV = restSpeedThreshold;\n    return this;\n  }\n\n  static withInitialValues(values: StyleProps): BaseAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n\n  withInitialValues(values: StyleProps): BaseAnimationBuilder {\n    this.initialValues = values;\n    return this;\n  }\n\n  getAnimationAndConfig(): LayoutAnimationAndConfig {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : (withTiming as AnimationFunction);\n    const damping = this.dampingV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const restDisplacementThreshold = this.restDisplacementThresholdV;\n    const restSpeedThreshold = this.restSpeedThresholdV;\n\n    const animation = type;\n\n    const config: BaseBuilderAnimationConfig = {};\n\n    if (type === withTiming) {\n      if (easing) {\n        config.easing = easing;\n      }\n      if (duration) {\n        config.duration = duration;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    } else {\n      if (damping) {\n        config.damping = damping;\n      }\n      if (mass) {\n        config.mass = mass;\n      }\n      if (stiffness) {\n        config.stiffness = stiffness;\n      }\n      if (overshootClamping) {\n        config.overshootClamping = overshootClamping;\n      }\n      if (restDisplacementThreshold) {\n        config.restDisplacementThreshold = restDisplacementThreshold;\n      }\n      if (restSpeedThreshold) {\n        config.restSpeedThreshold = restSpeedThreshold;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    }\n    return [animation, config];\n  }\n}\n"],"mappings":"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"}