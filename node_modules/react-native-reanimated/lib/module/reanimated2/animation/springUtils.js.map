{"version":3,"names":["bisectRoot","_ref","min","max","func","maxIterations","ACCURACY","idx","current","Math","abs","initialCalculations","mass","arguments","length","undefined","config","configIsInvalid","zeta","omega0","omega1","useDuration","stiffness","k","dampingRatio","sqrt","damping","c","m","calcuateNewMassToMatchDuration","x0","v0","restSpeedThreshold","threshold","duration","durationForMass","amplitude","exp","log","criticallyDampedSpringCalculations","animation","precalculatedValues","toValue","t","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","position","velocity","underDampedSpringCalculations","sin1","sin","cos1","cos","underDampedEnvelope","underDampedFrag1","underDampedPosition","underDampedVelocity","isAnimationTerminatingCalculation","startValue","isOvershooting","overshootClamping","isVelocity","isDisplacement","restDisplacementThreshold"],"sources":["springUtils.ts"],"sourcesContent":["import { Animation, AnimatableValue, Timestamp } from '../commonTypes';\n\nexport type SpringConfig = {\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n} & (\n  | {\n      mass?: number;\n      damping?: number;\n      duration?: never;\n      dampingRatio?: never;\n    }\n  | {\n      mass?: never;\n      damping?: never;\n      duration?: number;\n      dampingRatio?: number;\n    }\n);\n\nexport interface SpringConfigInner {\n  useDuration: boolean;\n  configIsInvalid: boolean;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  startValue: number;\n  zeta: number;\n  omega0: number;\n  omega1: number;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\nfunction bisectRoot({\n  min,\n  max,\n  func,\n  maxIterations = 20,\n}: {\n  min: number;\n  max: number;\n  func: (x: number) => number;\n  maxIterations?: number;\n}) {\n  'worklet';\n  const ACCURACY = 0.00005;\n  let idx = maxIterations;\n  let current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}\n\nexport function initialCalculations(\n  mass = 0,\n  config: Record<keyof SpringConfig, any> & SpringConfigInner\n): {\n  zeta: number;\n  omega0: number;\n  omega1: number;\n} {\n  'worklet';\n\n  if (config.configIsInvalid) {\n    return { zeta: 0, omega0: 0, omega1: 0 };\n  }\n\n  if (config.useDuration) {\n    const { stiffness: k, dampingRatio: zeta } = config;\n\n    /** omega0 and omega1 denote angular frequency and natural angular frequency, see this link for formulas:\n     *  https://courses.lumenlearning.com/suny-osuniversityphysics/chapter/15-5-damped-oscillations/\n     */\n    const omega0 = Math.sqrt(k / mass);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n\n    return { zeta, omega0, omega1 };\n  } else {\n    const { damping: c, mass: m, stiffness: k } = config;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n    return { zeta, omega0, omega1 };\n  }\n}\n\nexport function calcuateNewMassToMatchDuration(\n  x0: number,\n  config: Record<keyof SpringConfig, any> & SpringConfigInner,\n  v0: number\n) {\n  'worklet';\n  if (config.configIsInvalid) {\n    return 0;\n  }\n\n  /** Use this formula: https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_I_-_Mechanics_Sound_Oscillations_and_Waves_(OpenStax)/15%3A_Oscillations/15.06%3A_Damped_Oscillations\n       * to find the asympotote and esitmate the damping that gives us the expected duration \n\n            ⎛ ⎛ c⎞           ⎞           \n            ⎜-⎜──⎟ ⋅ duration⎟           \n            ⎝ ⎝2m⎠           ⎠           \n       A ⋅ e                   = treshold\n\n \n      Amplitude calculated using \"Conservation of energy\"\n                       _________________\n                      ╱      2         2\n                     ╱ m ⋅ v0  + k ⋅ x0 \n      amplitude =   ╱  ─────────────────\n                  ╲╱           k        \n\n      And replace mass with damping ratio which is provided: m = (c^2)/(4 * k * zeta^2)   \n      */\n  const {\n    stiffness: k,\n    dampingRatio: zeta,\n    restSpeedThreshold: threshold,\n    duration,\n  } = config;\n\n  const durationForMass = (mass: number) => {\n    'worklet';\n    const amplitude =\n      (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    const c = zeta * 2 * Math.sqrt(k * mass);\n    return (\n      1000 * ((-2 * mass) / c) * Math.log((threshold * 0.01) / amplitude) -\n      duration\n    );\n  };\n\n  // Bisection turns out to be much faster than Newton's method in our case\n  return bisectRoot({ min: 0, max: 100, func: durationForMass });\n}\n\nexport function criticallyDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    v0: number;\n    x0: number;\n    omega0: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue } = animation;\n\n  const { v0, x0, omega0, t } = precalculatedValues;\n\n  const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  const criticallyDampedPosition =\n    toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n  const criticallyDampedVelocity =\n    criticallyDampedEnvelope *\n    (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity,\n  };\n}\n\nexport function underDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    zeta: number;\n    v0: number;\n    x0: number;\n    omega0: number;\n    omega1: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue, current, velocity } = animation;\n\n  const { zeta, t, omega0, omega1 } = precalculatedValues;\n\n  const v0 = -velocity;\n  const x0 = toValue - current;\n\n  const sin1 = Math.sin(omega1 * t);\n  const cos1 = Math.cos(omega1 * t);\n\n  // under damped\n  const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  const underDampedFrag1 =\n    underDampedEnvelope *\n    (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n  const underDampedPosition = toValue - underDampedFrag1;\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity =\n    zeta * omega0 * underDampedFrag1 -\n    underDampedEnvelope *\n      (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n  return { position: underDampedPosition, velocity: underDampedVelocity };\n}\n\nexport function isAnimationTerminatingCalculation(\n  animation: InnerSpringAnimation,\n  config: Partial<SpringConfig> &\n    Required<\n      Pick<SpringConfig, 'restSpeedThreshold' | 'restDisplacementThreshold'>\n    >\n): {\n  isOvershooting: boolean;\n  isVelocity: boolean;\n  isDisplacement: boolean;\n} {\n  'worklet';\n  const { toValue, velocity, startValue, current } = animation;\n\n  const isOvershooting = config.overshootClamping\n    ? (current > toValue && startValue < toValue) ||\n      (current < toValue && startValue > toValue)\n    : false;\n\n  const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  const isDisplacement =\n    Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n  return { isOvershooting, isVelocity, isDisplacement };\n}\n"],"mappings":"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"}